// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

/****************************************************************************************
 *                            NOTICE: AUTO-GENERATED                                    *
 ****************************************************************************************
 * This file is automatically generated by script "./src/question/generator.ts".        *
 * Please don't manually change its contents, as any modifications will be overwritten! *
 ***************************************************************************************/

import { CLICommandOption, CLICommandArgument } from "@microsoft/teamsfx-api";

export const AddAuthActionOptions: CLICommandOption[] = [
  {
    name: "plugin-manifest-path",
    type: "string",
    description: "Plugin manifest path.",
    required: true,
  },
  {
    name: "openapi-spec-location",
    type: "string",
    description: "OpenAPI specification to add Auth configuration.",
  },
  {
    name: "api-operation",
    type: "array",
    description: "API to add Auth configuration.",
  },
  {
    name: "auth-name",
    type: "string",
    description: "Name of Auth Configuration.",
    required: true,
  },
  {
    name: "api-auth",
    type: "string",
    description: "The authentication type for the API.",
    required: true,
    default: "bearer-token",
    choices: ["bearer-token", "api-key", "oauth"],
  },
  {
    name: "oauth-authorization-url",
    type: "string",
    description: "Authorization Url for oauth.",
  },
  {
    name: "oauth-token-url",
    type: "string",
    description: "Token Url for oauth.",
  },
  {
    name: "oauth-refresh-url",
    type: "string",
    description: "Refresh Url for oauth. Leave it emplt if not needed.",
  },
  {
    name: "oauth-scope",
    type: "string",
    description: "Scope for oauth.",
  },
  {
    name: "oauth-pkce",
    type: "string",
    description: "Enable PKCE for OAuth?",
    default: "false",
    choices: ["true", "false"],
  },
  {
    name: "api-key-in",
    type: "string",
    description: "Enter where the API Key should be in the request",
    default: "header",
    choices: ["header", "query"],
  },
  {
    name: "api-key-name",
    type: "string",
    description: "Name of the API key.",
  },
];
export const AddAuthActionArguments: CLICommandArgument[] = [];
